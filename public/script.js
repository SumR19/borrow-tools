document.addEventListener("DOMContentLoaded", function () {
    // ‚úÖ ‡πÉ‡∏ä‡πâ same origin - ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡∏ó‡∏∏‡∏Å URL
    const API_URL = window.location.origin;
    
    console.log("üåê ‡πÉ‡∏ä‡πâ API URL:", API_URL);
    
    const toolsList = document.getElementById("tools-list");
    const borrowedList = document.getElementById("borrowed-list");
    const siteInput = document.getElementById("site-name");
    const noteInput = document.getElementById("note");
    const searchTool = document.getElementById("search-tool");
    const borrowForm = document.getElementById("borrow-form");

    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö DOM elements ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    console.log("üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö DOM elements:");
    console.log("- API_URL:", API_URL);
    console.log("- toolsList:", toolsList);
    console.log("- borrowedList:", borrowedList);
    console.log("- siteInput:", siteInput);
    console.log("- noteInput:", noteInput);
    console.log("- searchTool:", searchTool);
    console.log("- borrowForm:", borrowForm);
    
    // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° WebSocket connection
    const socket = io(API_URL);
    
    // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö API integration
    let availableTools = []; // ‡∏à‡∏∞‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å API
    let allTools = []; // ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡πá‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤

    const toolNames = [
        // üîß ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡πÄ‡∏à‡∏≤‡∏∞/‡∏™‡∏ß‡πà‡∏≤‡∏ô
        "‡∏™‡∏ß‡πà‡∏≤‡∏ô (‡πÅ‡∏ö‡∏ï)",
        "‡∏™‡∏ß‡πà‡∏≤‡∏ô (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡∏™‡∏ß‡πà‡∏≤‡∏ô‡πÇ‡∏£‡∏ï‡∏≤‡∏£‡∏µ,‡∏™‡∏ß‡πà‡∏≤‡∏ô‡πÅ‡∏ä‡πá‡∏Å (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡∏™‡∏ß‡πà‡∏≤‡∏ô‡πÇ‡∏£‡∏ï‡∏≤‡∏£‡∏µ‡πà,‡∏™‡∏ß‡πà‡∏≤‡∏ô‡πÅ‡∏¢‡πá‡∏Å(‡πÅ‡∏ö‡∏ï)",
        "‡∏™‡∏ß‡πà‡∏≤‡∏ô‡πÇ‡∏£‡∏ï‡∏≤‡∏£‡∏µ‡πà‡πÅ‡∏ö‡∏ï‡πÄ‡∏•‡πá‡∏Å",
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏Å‡∏±‡∏î,‡πÄ‡∏à‡∏≤‡∏∞ ‡∏Ñ‡∏≠‡∏ô‡∏Å‡∏£‡∏µ‡∏ï (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏à‡∏≤‡∏∞‡∏Ñ‡∏¥‡∏ô, ‡∏Ç‡∏∏‡∏î‡∏´‡∏•‡∏∏‡∏° (‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô)",
        "‡∏ä‡∏∏‡∏î‡∏™‡∏ß‡πà‡∏≤‡∏ô ‡πÅ‡∏•‡∏∞ ‡∏´‡∏¥‡∏ô‡πÄ‡∏à‡∏µ‡∏¢‡∏£ (‡πÅ‡∏ö‡∏ï)",
    
        // üî® ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ï‡∏±‡∏î/‡πÄ‡∏à‡∏µ‡∏¢‡∏£/‡∏Ç‡∏±‡∏î
        "‡∏´‡∏¥‡∏ô‡πÄ‡∏à‡∏µ‡∏¢‡∏£‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡∏´‡∏¥‡∏ô‡πÄ‡∏à‡∏µ‡∏¢‡∏£‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å (‡πÅ‡∏ö‡∏ï)",
        "‡∏´‡∏¥‡∏ô‡πÄ‡∏à‡∏µ‡∏¢‡∏£‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏•‡∏≤‡∏á (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡∏´‡∏¥‡∏ô‡πÄ‡∏à‡∏µ‡∏¢‡∏£‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏•‡∏≤‡∏á (‡πÅ‡∏ö‡∏ï)",
        "‡∏´‡∏¥‡∏ô‡πÄ‡∏à‡∏µ‡∏¢‡∏£‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡πÑ‡∏ü‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡πÑ‡∏ü‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ç‡∏±‡∏î‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡∏ó‡∏£‡∏≤‡∏¢‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ç‡∏±‡∏î‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡∏ó‡∏£‡∏≤‡∏¢‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡∏£‡∏ñ‡∏ñ‡∏±‡∏á‡∏Ç‡∏±‡∏î‡∏ú‡∏ô‡∏±‡∏á (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ç‡∏±‡∏î‡∏ú‡∏ô‡∏±‡∏á (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡πÄ‡∏Å‡∏£‡∏µ‡∏¢‡∏á‡∏Ç‡∏±‡∏î‡∏°‡∏±‡∏ô‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å",
        "‡πÄ‡∏Å‡∏£‡∏µ‡∏¢‡∏á‡∏Ç‡∏±‡∏î‡∏°‡∏±‡∏ô‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà",
        "‡∏£‡∏ñ‡∏ñ‡∏±‡∏á‡∏Ç‡∏±‡∏î‡∏™‡∏Å‡∏¥‡∏°",
    
        // ü™ö ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ï‡∏±‡∏î‡πÑ‡∏°‡πâ
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ï‡∏±‡∏î‡πÑ‡∏°‡πâ (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡∏à‡∏¥‡πä‡∏Å‡∏ã‡∏≠‡∏ï‡∏±‡∏î‡πÑ‡∏°‡πâ (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡∏à‡∏¥‡πä‡∏Å‡∏ã‡∏≠‡∏ï‡∏±‡∏î‡πÑ‡∏°‡πâ (‡πÅ‡∏ö‡∏ï)",
        "‡∏ß‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡∏ß‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (‡πÅ‡∏ö‡∏ï)",
    
        // ‚úÇÔ∏è ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ï‡∏±‡∏î‡πÇ‡∏•‡∏´‡∏∞/‡∏ß‡∏±‡∏™‡∏î‡∏∏
        "‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£‡∏ï‡∏±‡∏î‡∏ã‡∏µ‡∏•‡∏≤‡∏¢ (C-Line)",
        "‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£‡∏ï‡∏±‡∏î‡∏ó‡πà‡∏≠ Pvc",
        "‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£‡∏ï‡∏±‡∏î‡πÅ‡∏ú‡πà‡∏ô‡πÄ‡∏°‡∏ó‡∏±‡∏•‡∏ä‡∏µ‡∏ó",
        "‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£‡∏ï‡∏±‡∏î‡πÄ‡∏´‡∏•‡πá‡∏Å",
        "‡∏ï‡∏±‡∏ß‡∏ï‡∏±‡∏î‡∏Å‡∏£‡∏∞‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á",
        "‡∏ï‡∏±‡∏ß‡∏à‡∏±‡∏ö‡∏Å‡∏£‡∏∞‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á",
        "‡∏Å‡∏¥‡πä‡∏ü‡∏´‡∏ô‡∏µ‡∏ö‡∏Å‡∏£‡∏∞‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á (‡∏ñ‡∏∏‡∏á‡∏•‡∏∞ 100 ‡∏ï‡∏±‡∏ß)",
    
        // üèóÔ∏è ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏Å‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á/‡∏õ‡∏π‡∏ô
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏≤‡∏¢‡∏à‡∏µ‡πâ‡∏õ‡∏π‡∏ô (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÇ‡∏°‡πà‡∏õ‡∏π‡∏ô‡∏â‡∏≤‡∏ö (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡∏´‡∏±‡∏ß‡∏õ‡∏±‡πà‡∏ô‡∏õ‡∏π‡∏ô",
        "‡∏Å‡∏∞‡∏ö‡∏∞‡∏õ‡∏π‡∏ô",
        "‡∏ñ‡∏±‡∏á‡πÉ‡∏™‡πà‡∏õ‡∏π‡∏ô",
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ï‡∏ö‡∏î‡∏¥‡∏ô (‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô)",
    
        // ‚ö° ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°/‡πÑ‡∏ü‡∏ü‡πâ‡∏≤
        "‡∏ï‡∏π‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡∏ï‡∏π‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° Mig (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡∏™‡∏≤‡∏¢‡πÑ‡∏ü (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡∏™‡∏≤‡∏¢‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
    
        // üå¨Ô∏è ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏•‡∏°/‡∏î‡∏π‡∏î/‡πÄ‡∏õ‡πà‡∏≤
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏π‡∏î‡∏ù‡∏∏‡πà‡∏ô (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏õ‡πà‡∏≤‡∏•‡∏°‡∏£‡πâ‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡∏ó‡πà‡∏≠ Pvc (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏õ‡πà‡∏≤‡∏•‡∏° (‡πÑ‡∏£‡πâ‡∏™‡∏≤‡∏¢,‡πÅ‡∏ö‡∏ï)",
        "‡∏õ‡∏±‡πä‡∏°‡∏•‡∏°",
        "‡πÅ‡∏°‡πá‡∏Å‡∏•‡∏°",
        "‡∏ñ‡∏±‡∏á‡∏•‡∏°",
        "‡∏õ‡∏∑‡∏ô‡∏•‡∏°",
        "‡∏õ‡∏±‡πâ‡∏°‡∏ô‡πâ‡∏≥‡πÑ‡∏î‡πÇ‡∏ß‡πà (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
         
    
        // üìè ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ß‡∏±‡∏î/‡∏™‡∏≥‡∏£‡∏ß‡∏à
        "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥",
        "‡∏™‡∏≤‡∏¢‡∏ß‡∏±‡∏î‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥",
        "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏ß‡∏±‡∏î‡∏£‡∏∞‡∏î‡∏±‡∏ö",
        "‡∏™‡∏≤‡∏°‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°",
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏¢‡∏¥‡∏á‡πÄ‡∏•‡πÄ‡∏ã‡∏≠‡∏£‡πå (‡πÅ‡∏ö‡∏ï)",
        "‡πÄ‡∏ó‡∏õ‡∏ß‡∏±‡∏î",
    
        // üí° ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÅ‡∏™‡∏á‡∏™‡∏ß‡πà‡∏≤‡∏á/‡∏û‡πà‡∏ô
        "‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï‡πÑ‡∏•‡∏ó‡πå",
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏û‡πà‡∏ô‡∏™‡∏µ",
    
        // üîó ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏¢‡∏∂‡∏î/‡∏ï‡∏¥‡∏î
        "‡∏õ‡∏∑‡∏ô‡∏¢‡∏¥‡πà‡∏á‡∏Å‡∏≤‡∏ß",
        "‡∏õ‡∏∑‡∏ô‡∏¢‡∏¥‡∏á‡∏Å‡∏≤‡∏ß‡πÑ‡∏™‡πâ‡∏Å‡∏£‡∏≠‡∏Å",
        "‡πÅ‡∏î‡πä‡∏õ‡∏Ç‡∏≤‡∏ß,‡∏Å‡∏≤‡∏ß‡∏ï‡∏∞‡∏õ‡∏π‡πÅ‡∏î‡πä‡∏õ‡∏™‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡πÜ",
    
        // üî® ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
        "‡∏Ñ‡πâ‡∏≠‡∏ô‡πÄ‡∏•‡πá‡∏Å",
        "‡∏ä‡∏∞‡πÅ‡∏•‡∏á",
        "‡∏ó‡∏£‡∏¥‡∏°‡πÄ‡∏°‡∏≠‡∏£‡πå (‡πÅ‡∏ö‡∏ï)",
        "‡∏Ñ‡πâ‡∏≠‡∏ô‡∏õ‡∏≠‡∏ô‡∏î‡πå",
        "‡∏Ñ‡πâ‡∏≠‡∏ô‡∏¢‡∏≤‡∏á",
        "‡∏ä‡∏∏‡∏î‡∏£‡∏ß‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ä‡πà‡∏≤‡∏á (‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏ä‡∏∏‡∏î‡πÉ‡∏´‡∏ç‡πà)",
    
        // üå± ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏™‡∏ß‡∏ô/‡πÑ‡∏£‡πà
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ï‡∏±‡∏î‡∏´‡∏ç‡πâ‡∏≤ (‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô)",
        "‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏¢‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏ï‡∏±‡∏î‡πÑ‡∏°‡πâ (‡πÅ‡∏ö‡∏ï)",
    
        // ü™ú ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏∑‡πà‡∏ô ‡πÜ
        "‡∏ö‡∏±‡∏ô‡πÑ‡∏î",
        "‡∏à‡∏≠‡∏ö",
        "‡πÄ‡∏™‡∏µ‡∏¢‡∏°",
        "‡∏ö‡∏∏‡πâ‡∏á‡∏Å‡∏µ‡πã"
    ];

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏´‡∏•‡∏±‡∏á toolNames array
    function getToolOrderFromArray(toolName) {
        const index = toolNames.findIndex(name => name === toolName);
        return index >= 0 ? index : 999; // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡πâ‡∏≤‡∏¢‡∏™‡∏∏‡∏î
    }

        // ‡∏´‡∏•‡∏±‡∏á toolNames array
    
    // ‚úÖ WebSocket Event Listeners
    socket.on('connect', () => {
        console.log('üîå ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ WebSocket ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å)');
    });
    
    socket.on('disconnect', () => {
        console.log('üîå WebSocket ‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠');
    });
    
    socket.on('toolAdded', (data) => {
        console.log('‚ú® ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß:', data.tool.name);
        loadAvailableTools(); // ‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        showNewToolNotification(data.tool.name);
    });
    
    socket.on('toolUpdated', (data) => {
        console.log('‚úèÔ∏è ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ñ‡∏π‡∏Å‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:', data.tool.name);
        loadAvailableTools(); // ‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    });
    
    socket.on('toolDeleted', (data) => {
        console.log('üóëÔ∏è ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ñ‡∏π‡∏Å‡∏•‡∏ö:', data.toolName);
        loadAvailableTools(); // ‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        showDeleteToolNotification(data.toolName);
    });

    // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÉ‡∏ô loadAvailableTools()
    async function loadAvailableTools() {
        try {
            console.log('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏à‡∏≤‡∏Å API...');
            
            const response = await fetch(`${API_URL}/api/tools/catalog`);
            
            if (!response.ok) {
                throw new Error(`HTTP ${response.status}: ${response.statusText}`);
            }
            
            const result = await response.json();
            
            if (result.success && result.data) {
                // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏≤‡∏° toolNames array ‡∏Å‡πà‡∏≠‡∏ô
                const sortedTools = result.data.sort((a, b) => {
                    const orderA = getToolOrderFromArray(a.name);
                    const orderB = getToolOrderFromArray(b.name);
                    
                    // 1. ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÉ‡∏ô toolNames array
                    if (orderA !== orderB) {
                        return orderA - orderB;
                    }
                    
                    // 2. ‡∏ñ‡πâ‡∏≤‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏° isNew
                    if (a.isNew && !b.isNew) return -1;
                    if (!a.isNew && b.isNew) return 1;
                    
                    // 3. ‡∏ñ‡πâ‡∏≤ isNew ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏° usageCount
                    if (a.usageCount !== b.usageCount) {
                        return b.usageCount - a.usageCount;
                    }
                    
                    // 4. ‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
                    return a.name.localeCompare(b.name, 'th');
                });
                
                availableTools = sortedTools;
                allTools = [...sortedTools];
                displayToolsFromAPI(availableTools);
                console.log(`‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏à‡∏≤‡∏Å API ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${availableTools.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏° toolNames)`);
                
            } else {
                throw new Error(result.error || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏î‡πâ');
            }
        } catch (error) {
            console.error('‚ùå Error loading tools from API:', error);
            console.log('üîÑ ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏à‡∏≤‡∏Å toolNames array...');
            
            // ‚úÖ Fallback: ‡πÉ‡∏ä‡πâ loadTools() ‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤ API ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
            loadToolsOriginal();
        }
    }
    
    // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å API
    function displayToolsFromAPI(tools) {
        if (!toolsList) {
            console.warn("‚ö†Ô∏è toolsList element not found");
            return;
        }
    
        if (tools.length === 0) {
            toolsList.innerHTML = `
                <div style="text-align: center; padding: 40px; grid-column: 1 / -1; color: #666;">
                    <h3>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</h3>
                    <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö</p>
                </div>
            `;
            return;
        }
    
        toolsList.innerHTML = tools.map(tool => {
            const toolName = typeof tool === 'string' ? tool : tool.name;
            const isNew = typeof tool === 'object' && tool.isNew;
            const usageCount = typeof tool === 'object' ? tool.usageCount || 0 : 0;
            
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á badge "‡πÉ‡∏´‡∏°‡πà" ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
            const newBadge = isNew ? `
                <div class="new-badge" style="
                    position: absolute;
                    top: 8px;
                    right: 8px;
                    background: linear-gradient(45deg, #ff6b6b, #feca57);
                    color: white;
                    padding: 4px 8px;
                    border-radius: 12px;
                    font-size: 11px;
                    font-weight: 600;
                    box-shadow: 0 2px 4px rgba(0,0,0,0.2);
                    animation: pulse 2s infinite;
                ">‚ú® ‡πÉ‡∏´‡∏°‡πà</div>
            ` : '';
            
            const toolId = toolName.replace(/\s+/g, '-').replace(/[^\w-]/g, '');
            
            return `
                <div class="tool-card ${isNew ? 'new-tool' : ''}" data-tool-name="${toolName}" style="position: relative;">
                    ${newBadge}
                    <input type="checkbox" name="tools" value="${toolName}" id="tool-${toolId}">
                    <label for="tool-${toolId}">${toolName}</label>
                    ${usageCount > 0 ? `
                        <div class="tool-stats" style="font-size: 12px; color: #666; margin: 4px 0;">
                            ‡∏¢‡∏∑‡∏° ${usageCount} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
                        </div>
                    ` : ''}
                    <input type="number" class="tool-quantity" min="1" max="99" value="1" onclick="event.stopPropagation()">
                </div>
            `;
        }).join("");
        
        // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å attachCardClickListeners ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á DOM ‡πÄ‡∏™‡∏£‡πá‡∏à
        attachCardClickListeners();
        
        console.log(`‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏à‡∏≤‡∏Å API: ${tools.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    }
    
    // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á Notification ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏´‡∏°‡πà
    function showNewToolNotification(toolName) {
        const toast = document.createElement('div');
        toast.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: linear-gradient(45deg, #4ecdc4, #44a08d);
            color: white;
            padding: 16px 24px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
            z-index: 10000;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            font-weight: 600;
            transform: translateX(400px);
            transition: transform 0.3s ease;
        `;
        toast.innerHTML = `‚ú® ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏´‡∏°‡πà: ${toolName}`;
        
        document.body.appendChild(toast);
        
        setTimeout(() => toast.style.transform = 'translateX(0)', 100);
        setTimeout(() => toast.style.transform = 'translateX(400px)', 4000);
        setTimeout(() => document.body.removeChild(toast), 4500);
    }
    
    // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á Notification ‡∏•‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
    function showDeleteToolNotification(toolName) {
        const toast = document.createElement('div');
        toast.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: linear-gradient(45deg, #ff6b6b, #feca57);
            color: white;
            padding: 16px 24px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
            z-index: 10000;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            font-weight: 600;
            transform: translateX(400px);
            transition: transform 0.3s ease;
        `;
        toast.innerHTML = `üóëÔ∏è ‡∏•‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå: ${toolName}`;
        
        document.body.appendChild(toast);
        
        setTimeout(() => toast.style.transform = 'translateX(0)', 100);
        setTimeout(() => toast.style.transform = 'translateX(400px)', 4000);
        setTimeout(() => document.body.removeChild(toast), 4500);
    }

    // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á tool cards
    // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç loadTools() ‡πÉ‡∏´‡πâ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å API ‡∏Å‡πà‡∏≠‡∏ô
    function loadTools() {
        console.log("üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå...");
        
        // ‡∏•‡∏≠‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å API ‡∏Å‡πà‡∏≠‡∏ô
        loadAvailableTools().catch(() => {
            // ‡∏ñ‡πâ‡∏≤ API ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡πÉ‡∏ä‡πâ hardcode
            console.log("üîÑ ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏£‡∏≠‡∏á (hardcode)...");
            loadToolsOriginal();
        });
    }

    // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡πÄ‡∏õ‡πá‡∏ô loadToolsOriginal()
    function loadToolsOriginal() {
        if (!toolsList) {
            console.warn("‚ö†Ô∏è toolsList element not found");
            return;
        }
        toolsList.innerHTML = toolNames.map(name => `
            <div class="tool-card" data-tool-name="${name}">
                <input type="checkbox" name="tools" value="${name}" id="tool-${name.replace(/\s+/g, '-').replace(/[^\w-]/g, '')}">
                <label for="tool-${name.replace(/\s+/g, '-').replace(/[^\w-]/g, '')}">${name}</label>
                <input type="number" class="tool-quantity" min="1" max="99" value="1" onclick="event.stopPropagation()">
            </div>
        `).join("");
        
        // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Event Listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡πå‡∏î
        attachCardClickListeners();
        
        console.log("‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô (hardcode)");
    }

    // ‚úÖ ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô attachCardClickListeners() ‡πÄ‡∏î‡∏¥‡∏°
    function attachCardClickListeners() {
        const toolCards = document.querySelectorAll('.tool-card');
        
        toolCards.forEach(card => {
            // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° tooltip ‡πÄ‡∏°‡∏∑‡πà‡∏≠ hover
            card.title = "‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å/‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å";
            
            card.addEventListener('click', function(event) {
                // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏ó‡∏µ‡πà input quantity
                if (event.target.classList.contains('tool-quantity')) {
                    event.stopPropagation();
                    return;
                }
                
                // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏ã‡πâ‡∏≥‡∏ó‡∏µ‡πà checkbox ‡∏´‡∏£‡∏∑‡∏≠ label
                if (event.target.type === 'checkbox' || event.target.tagName === 'LABEL') {
                    return;
                }
                
                const checkbox = this.querySelector('input[type="checkbox"]');
                if (checkbox) {
                    checkbox.checked = !checkbox.checked;
                    
                    // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï visual state
                    this.classList.toggle('selected', checkbox.checked);
                    
                    // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï title
                    this.title = checkbox.checked ? "‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å" : "‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å";
                    
                    // ‚úÖ Animation
                    if (checkbox.checked) {
                        this.classList.add('card-selected-animation');
                        setTimeout(() => {
                            this.classList.remove('card-selected-animation');
                        }, 300);
                    }
                    
                    // ‚úÖ ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á (optional)
                    if (checkbox.checked) {
                        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á click ‡πÄ‡∏ö‡∏≤ ‡πÜ
                        const audio = new Audio('data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAkBYAkBYAk');
                        audio.volume = 0.1;
                        audio.play().catch(() => {}); // ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á error ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
                    }
                    
                    console.log(`${checkbox.checked ? '‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å' : '‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å'}: ${checkbox.value}`);
                }
            });
            
            // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° visual feedback ‡πÄ‡∏°‡∏∑‡πà‡∏≠ hover
            card.addEventListener('mouseenter', function() {
                if (!this.querySelector('input[type="checkbox"]').checked) {
                    this.classList.add('card-hover');
                }
            });
            
            card.addEventListener('mouseleave', function() {
                this.classList.remove('card-hover');
            });
            
            // ‚úÖ Keyboard support
            card.tabIndex = 0; // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ Tab ‡πÑ‡∏î‡πâ
            card.addEventListener('keydown', function(event) {
                if (event.key === 'Enter' || event.key === ' ') {
                    event.preventDefault();
                    this.click();
                }
            });
        });
    }

    // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
    // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏à‡∏≤‡∏Å toolNames
    if (searchTool) {
        searchTool.addEventListener("input", function () {
            const searchTerm = this.value.toLowerCase();
            
            if (!searchTerm) {
                // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÄ‡∏î‡∏¥‡∏°
                displayToolsFromAPI(availableTools);
                return;
            }
            
            // ‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏à‡∏≤‡∏Å toolNames
            const filteredTools = availableTools.filter(tool => {
                const toolName = typeof tool === 'string' ? tool : tool.name;
                return toolName.toLowerCase().includes(searchTerm);
            });
            
            // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÉ‡∏ô toolNames
            filteredTools.sort((a, b) => {
                const nameA = typeof a === 'string' ? a : a.name;
                const nameB = typeof b === 'string' ? b : b.name;
                return getToolOrderFromArray(nameA) - getToolOrderFromArray(nameB);
            });
            
            displayToolsFromAPI(filteredTools);
        });
    }

    // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏° - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
    if (borrowForm) {
        borrowForm.addEventListener("submit", async function (event) {
            event.preventDefault();

            const siteName = siteInput?.value?.trim() || "";
            const note = noteInput?.value?.trim() || "";
            
            // ‚úÖ ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
            const selectedTools = Array.from(document.querySelectorAll("input[name='tools']:checked"))
                .map(checkbox => {
                    const quantity = parseInt(checkbox.parentElement.querySelector(".tool-quantity").value, 10) || 1;
                    return {
                        name: checkbox.value,
                        quantity: quantity
                    };
                });

            console.log("üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á:", { siteName, selectedTools, note });

            // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            if (!siteName) {
                Swal.fire({ 
                    icon: "warning", 
                    title: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô!",
                    text: "‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏¢‡∏∑‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå"
                });
                return;
            }
            
            if (selectedTools.length === 0) {
                Swal.fire({ 
                    icon: "warning", 
                    title: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå!",
                    text: "‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"
                });
                return;
            }

            // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á loading
            Swal.fire({
                title: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            try {
                console.log("üîó ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á:", `${API_URL}/borrow`);
                const response = await fetch(`${API_URL}/borrow`, {
                    method: "POST",
                    headers: { 
                        "Content-Type": "application/json",
                        "Accept": "application/json"
                    },
                    body: JSON.stringify({ 
                        site: siteName, 
                        tools: selectedTools, 
                        note: note 
                    })
                });

                console.log("üì° Response status:", response.status);
                const result = await response.json();
                console.log("üìù Response data:", result);

                if (response.ok) {
                    // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô
                    Swal.fire({ 
                        icon: "success", 
                        title: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!", 
                        text: result.message,
                        timer: 2000,
                        showConfirmButton: false
                    });
                    
                    // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏° (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ)
                    if (siteInput) siteInput.value = "";
                    if (noteInput) noteInput.value = "";
                    
                    // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï checkbox ‡πÅ‡∏•‡∏∞ visual state
                    document.querySelectorAll("input[name='tools']").forEach(checkbox => {
                        checkbox.checked = false;
                        
                        // ‚úÖ ‡πÄ‡∏≠‡∏≤ class selected ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πå‡∏î
                        const card = checkbox.closest('.tool-card');
                        if (card) {
                            card.classList.remove('selected');
                            card.title = "‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å/‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å"; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï tooltip
                        }
                        
                        // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï quantity
                        const quantityInput = checkbox.parentElement.querySelector(".tool-quantity");
                        if (quantityInput) quantityInput.value = 1;
                    });
                    
                    // ‚úÖ ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°
                    console.log("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏°...");
                    setTimeout(() => {
                        fetchBorrowedTools(true); // ‡∏£‡∏≠ 100ms ‡πÉ‡∏´‡πâ Swal ‡∏´‡∏≤‡∏¢‡∏Å‡πà‡∏≠‡∏ô
                    }, 100);
                    
                } else {
                    Swal.fire({ 
                        icon: "error", 
                        title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!", 
                        text: result.error || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ"
                    });
                }
            } catch (error) {
                console.error("‚ùå Error:", error);
                Swal.fire({ 
                    icon: "error", 
                    title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!", 
                    text: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ: " + error.message 
                });
            }
        });
    }

    // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏° - ‡πÉ‡∏ä‡πâ borrowedList ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    async function fetchBorrowedTools(forceRefresh = false) {
        console.log("üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô fetchBorrowedTools...");
        
        // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ DOM element ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (!borrowedList) {
            console.warn("‚ö†Ô∏è borrowedList element not found, skipping fetchBorrowedTools");
            return;
        }

        try {
            console.log("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏°...", forceRefresh ? "(‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä)" : "");
            
            // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á loading indicator - ‡πÉ‡∏ä‡πâ borrowedList ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
            borrowedList.innerHTML = '<div style="text-align: center; padding: 20px;"><span class="loading-spinner"></span> ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</div>';
            
            // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° timestamp ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô cache ‡πÄ‡∏°‡∏∑‡πà‡∏≠ forceRefresh = true
            const apiUrl = forceRefresh 
                ? `${API_URL}/borrowed-tools?t=${Date.now()}`
                : `${API_URL}/borrowed-tools`;
            
            const response = await fetch(apiUrl, {
                method: 'GET',
                headers: {
                    'Cache-Control': forceRefresh ? 'no-cache, no-store, must-revalidate' : 'default',
                    'Pragma': forceRefresh ? 'no-cache' : 'default',
                    'Expires': forceRefresh ? '0' : 'default'
                }
            });
            
            if (!response.ok) throw new Error(`HTTP ${response.status}: ${response.statusText}`);
            
            const data = await response.json();
            console.log("üìä API Response:", data);

            // ‚úÖ ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î - ‡πÉ‡∏ä‡πâ borrowedList ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
            borrowedList.innerHTML = '';

            if (!data || Object.keys(data).length === 0) {
                // Empty state
                borrowedList.innerHTML = `
                    <div style="text-align: center; padding: 40px; color: #718096;">
                        <div style="font-size: 3rem; margin-bottom: 15px;">üì≠</div>
                        <div style="font-size: 1.25rem; font-weight: 600; margin-bottom: 8px; color: #4a5568;">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏°</div>
                        <div style="font-size: 1rem; line-height: 1.5;">‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏¢‡∏∑‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÇ‡∏î‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô</div>
                    </div>
                `;
                return;
            }

            // ‚úÖ ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÅ‡∏•‡∏∞‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô
            Object.keys(data).forEach((site, index) => {
                const siteSection = document.createElement("div");
                siteSection.classList.add("site-section");
                siteSection.style.marginBottom = "30px";

                // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° animation ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà
                if (forceRefresh) {
                    siteSection.style.opacity = "0";
                    siteSection.style.transform = "translateY(20px)";
                    setTimeout(() => {
                        siteSection.style.transition = "all 0.5s ease";
                        siteSection.style.opacity = "1";
                        siteSection.style.transform = "translateY(0)";
                    }, index * 100);
                }

                // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô
                const siteHeader = document.createElement("div");
                siteHeader.classList.add("site-header");
                siteHeader.innerHTML = `
                    <h3 style="
                        background: rgba(255, 255, 255, 0.08);
                        backdrop-filter: blur(10px);
                        -webkit-backdrop-filter: blur(10px);
                        border: 1px solid rgba(255, 255, 255, 0.15);
                        color: #E2E8F0;
                        padding: 15px 20px;
                        border-radius: 12px;
                        margin: 0 0 15px 0;
                        font-size: 1.3rem;
                        text-align: center;
                        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        gap: 10px;
                    ">
                        üèóÔ∏è ‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô: ${site} 
                        <span style="
                            background: rgba(255, 215, 0, 0.15);
                            color: #FFD700;
                            padding: 4px 12px;
                            border-radius: 20px;
                            font-size: 0.9rem;
                            font-weight: 600;
                            border: 1px solid rgba(255, 215, 0, 0.3);
                        ">
                            ${data[site].length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
                        </span>
                    </h3>
                `;

                // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ
                const toolTable = document.createElement("table");
                toolTable.style.width = "100%";
                toolTable.style.borderCollapse = "collapse";
                toolTable.style.background = "white";
                toolTable.style.borderRadius = "12px";
                toolTable.style.overflow = "hidden";
                toolTable.style.boxShadow = "0 5px 15px rgba(0, 0, 0, 0.08)";

                // ‚úÖ ‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á
                toolTable.innerHTML = `
                    <thead>
                        <tr style="background: rgba(255, 255, 255, 0.05);">
                            <th style="padding: 15px; text-align: left; font-weight: 600; color: #FFD700;">üõ†Ô∏è ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</th>
                            <th style="padding: 15px; text-align: center; font-weight: 600; width: 120px; color: #FFD700;">üî¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
                            <th style="padding: 15px; text-align: left; font-weight: 600; color: #FFD700;">üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</th>
                            <th style="padding: 15px; text-align: center; font-weight: 600; width: 120px; color: #FFD700;">üïê ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏°</th>
                            <th style="padding: 15px; text-align: center; font-weight: 600; width: 200px; color: #FFD700;">‚ö° ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${data[site].map((tool, toolIndex) => `
                            <tr id="tool-row-${site.replace(/\s+/g, '-')}-${tool.name.replace(/\s+/g, '-')}" style="
                                border-bottom: 1px solid #e2e8f0;
                                transition: all 0.3s ease;
                            " onmouseover="this.style.background='#f7fafc'" onmouseout="this.style.background='white'">
                                <td style="padding: 15px;">
                                    <div style="display: flex; align-items: center; gap: 10px;">
                                        <span style="
                                            background: #e6fffa;
                                            color: #00695c;
                                            padding: 4px 8px;
                                            border-radius: 20px;
                                            font-size: 0.8rem;
                                            font-weight: 600;
                                        ">
                                            #${toolIndex + 1}
                                        </span>
                                        <strong style="color: #000000ff;">${tool.name}</strong>
                                    </div>
                                </td>
                                <td style="padding: 15px; text-align: center;">
                                    <span class="quantity-display" style="
                                        background: #fff3cd;
                                        color: #856404;
                                        padding: 6px 12px;
                                        border-radius: 6px;
                                        font-weight: 700;
                                        font-size: 1.1rem;
                                    ">
                                        ${tool.quantity} ‡∏ä‡∏¥‡πâ‡∏ô
                                    </span>
                                </td>
                                <td style="padding: 15px; max-width: 200px; word-wrap: break-word;">
                                    ${tool.note ? `
                                        <div style="
                                            background: #f8f9fa;
                                            padding: 8px 12px;
                                            border-radius: 8px;
                                            font-style: italic;
                                            color: #000000ff;
                                            border-left: 4px solid #667eea;
                                        ">
                                            ${tool.note}
                                        </div>
                                    ` : '<span style="color: #000000ff;">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</span>'}
                                </td>
                                <td style="padding: 15px; text-align: center;">
                                    <div style="font-size: 0.9rem; color: #000000ff;">
                                        ${new Date(tool.borrowedAt).toLocaleDateString('th-TH', {
                                            year: 'numeric',
                                            month: 'short',
                                            day: 'numeric'
                                        })}
                                    </div>
                                    <div style="font-size: 0.8rem; color: #6c757d; margin-top: 2px;">
                                        ${new Date(tool.borrowedAt).toLocaleTimeString('th-TH', {
                                            hour: '2-digit',
                                            minute: '2-digit'
                                        })}
                                    </div>
                                </td>
                                <td style="padding: 15px; text-align: center;">
                                    <div style="display: flex; gap: 5px; justify-content: center; flex-wrap: wrap;">
                                        <button 
                                            class="return-item-btn" 
                                            data-site="${site}" 
                                            data-name="${tool.name}"
                                            style="
                                                background: #28a745;
                                                color: white;
                                                border: none;
                                                padding: 6px 12px;
                                                border-radius: 6px;
                                                font-size: 0.85rem;
                                                cursor: pointer;
                                                transition: all 0.3s ease;
                                                display: flex;
                                                align-items: center;
                                                gap: 4px;
                                            "
                                            onmouseover="this.style.background='#218838'; this.style.transform='translateY(-1px)'"
                                            onmouseout="this.style.background='#28a745'; this.style.transform='translateY(0)'"
                                        >
                                            üîÑ ‡∏Ñ‡∏∑‡∏ô 1
                                        </button>
                                        <button 
                                            class="return-all-btn" 
                                            data-site="${site}" 
                                            data-name="${tool.name}"
                                            style="
                                                background: #dc3545;
                                                color: white;
                                                border: none;
                                                padding: 6px 12px;
                                                border-radius: 6px;
                                                font-size: 0.85rem;
                                                cursor: pointer;
                                                transition: all 0.3s ease;
                                                display: flex;
                                                align-items: center;
                                                gap: 4px;
                                            "
                                            onmouseover="this.style.background='#c82333'; this.style.transform='translateY(-1px)'"
                                            onmouseout="this.style.background='#dc3545'; this.style.transform='translateY(0)'"
                                        >
                                            üóëÔ∏è ‡∏Ñ‡∏∑‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        `).join("")}
                    </tbody>
                `;

                // ‚úÖ ‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô
                siteSection.appendChild(siteHeader);
                siteSection.appendChild(toolTable);
                borrowedList.appendChild(siteSection); // ‚úÖ ‡πÉ‡∏ä‡πâ borrowedList ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
            });

            // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏ß‡∏°
            const totalTools = Object.values(data).flat().length;
            const totalQuantity = Object.values(data).flat().reduce((sum, tool) => sum + tool.quantity, 0);
            const totalSites = Object.keys(data).length;

            const summaryDiv = document.createElement("div");
            summaryDiv.style.marginTop = "30px";
            summaryDiv.style.padding = "20px";
            summaryDiv.style.background = "rgba(255, 255, 255, 0.08)";
            summaryDiv.style.backdropFilter = "blur(15px)";
            summaryDiv.style.webkitBackdropFilter = "blur(15px)";
            summaryDiv.style.border = "1px solid rgba(255, 255, 255, 0.15)";
            summaryDiv.style.color = "#E2E8F0";
            summaryDiv.style.borderRadius = "12px";
            summaryDiv.style.textAlign = "center";
            summaryDiv.style.boxShadow = "0 8px 32px rgba(0, 0, 0, 0.3)";
            summaryDiv.innerHTML = `
                <h4 style="margin: 0 0 15px 0; font-size: 1.2rem; color: #FFD700;">üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏ß‡∏°</h4>
                <div style="display: flex; justify-content: space-around; flex-wrap: wrap; gap: 15px;">
                    <div style="
                        padding: 10px;
                        background: rgba(255, 215, 0, 0.1);
                        border-radius: 8px;
                        border: 1px solid rgba(255, 215, 0, 0.2);
                    ">
                        <div style="font-size: 2rem; font-weight: bold; color: #FFD700;">${totalSites}</div>
                        <div style="font-size: 0.9rem; opacity: 0.8;">‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô</div>
                    </div>
                    <div style="
                        padding: 10px;
                        background: rgba(255, 215, 0, 0.1);
                        border-radius: 8px;
                        border: 1px solid rgba(255, 215, 0, 0.2);
                    ">
                        <div style="font-size: 2rem; font-weight: bold; color: #FFD700;">${totalTools}</div>
                        <div style="font-size: 0.9rem; opacity: 0.8;">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</div>
                    </div>
                    <div style="
                        padding: 10px;
                        background: rgba(255, 215, 0, 0.1);
                        border-radius: 8px;
                        border: 1px solid rgba(255, 215, 0, 0.2);
                    ">
                        <div style="font-size: 2rem; font-weight: bold; color: #FFD700;">${totalQuantity}</div>
                        <div style="font-size: 0.9rem; opacity: 0.8;">‡∏ä‡∏¥‡πâ‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
                    </div>
                </div>
            `;
            borrowedList.appendChild(summaryDiv); // ‚úÖ ‡πÉ‡∏ä‡πâ borrowedList ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á

            // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å attachReturnEventListeners ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á DOM ‡πÄ‡∏™‡∏£‡πá‡∏à
            attachReturnEventListeners();

            console.log("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");

        } catch (error) {
            console.error("‚ùå Error fetching borrowed tools:", error);
            if (borrowedList) {
                borrowedList.innerHTML = `
                    <div style="text-align: center; padding: 40px; color: #dc3545;">
                        <div style="font-size: 3rem; margin-bottom: 15px;">‚ö†Ô∏è</div>
                        <div style="font-size: 1.25rem; font-weight: 600; margin-bottom: 8px;">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</div>
                        <div style="font-size: 1rem;">${error.message}</div>
                    </div>
                `;
            }
        }
    }

    // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô attachReturnEventListeners
    function attachReturnEventListeners() {
        // ‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡∏•‡∏∞‡∏ä‡∏¥‡πâ‡∏ô
        document.querySelectorAll(".return-item-btn").forEach(button => {
            button.addEventListener("click", async function () {
                const site = this.dataset.site;
                const name = this.dataset.name;

                console.log("üîÑ ‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå 1 ‡∏ä‡∏¥‡πâ‡∏ô:", { site, name });

                // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á loading ‡∏ö‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏î (‡πÉ‡∏ä‡πâ CSS spinner)
                const originalText = this.innerHTML;
                this.innerHTML = '<span class="loading-spinner"></span>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡∏∑‡∏ô...';
                this.disabled = true;

                try {
                    const response = await fetch(`${API_URL}/return-item`, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ site, name })
                    });

                    const result = await response.json();

                    if (response.ok) {
                        Swal.fire({ 
                            icon: "success", 
                            title: result.message,
                            timer: 2000,
                            showConfirmButton: false
                        });

                        // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI ‡πÅ‡∏ö‡∏ö Real-time ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                        const rowId = `tool-row-${site.replace(/\s+/g, '-')}-${name.replace(/\s+/g, '-')}`;
                        const row = document.getElementById(rowId);
                        
                        if (row) {
                            const quantityDisplay = row.querySelector('.quantity-display');
                            if (quantityDisplay) {
                                const currentQuantityText = quantityDisplay.textContent;
                                const currentQuantity = parseInt(currentQuantityText.match(/\d+/)[0]);
                                
                                if (currentQuantity > 1) {
                                    // ‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ‡∏û‡∏£‡πâ‡∏≠‡∏° animation
                                    quantityDisplay.textContent = `${currentQuantity - 1} ‡∏ä‡∏¥‡πâ‡∏ô`;
                                    quantityDisplay.classList.add('pulse');

                                    // ‡πÅ‡∏™‡∏î‡∏á animation ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
                                    quantityDisplay.style.background = '#d4edda';
                                    quantityDisplay.style.color = '#155724';
                                    setTimeout(() => {
                                        quantityDisplay.style.background = '#fff3cd';
                                        quantityDisplay.style.color = '#856404';
                                        quantityDisplay.classList.remove('pulse');
                                    }, 1000);
                                } else {
                                    // ‡∏•‡∏ö‡πÅ‡∏ñ‡∏ß‡∏ó‡∏±‡πâ‡∏á‡πÅ‡∏ñ‡∏ß ‡∏û‡∏£‡πâ‡∏≠‡∏° fadeOut animation
                                    row.classList.add('fade-out');
                                    setTimeout(() => {
                                        row.remove();
                                        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                                        checkAndUpdateSiteSection(site);
                                        // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏ß‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏•‡∏ö‡πÅ‡∏ñ‡∏ß‡πÅ‡∏•‡πâ‡∏ß
                                        updateSummaryStats();
                                    }, 500);
                                }
                            }
                        }
                        
                        // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏ß‡∏°‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
                        updateSummaryStats();
                        
                    } else {
                        Swal.fire({ icon: "error", title: "‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!", text: result.error });
                        // ‚úÖ ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏î‡∏¥‡∏°
                        this.innerHTML = originalText;
                        this.disabled = false;
                    }
                } catch (error) {
                    console.error("Error:", error);
                    Swal.fire({ icon: "error", title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!", text: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ" });
                    // ‚úÖ ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏î‡∏¥‡∏°
                    this.innerHTML = originalText;
                    this.disabled = false;
                }
            });
        });

        // ‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        document.querySelectorAll(".return-all-btn").forEach(button => {
            button.addEventListener("click", async function () {
                const site = this.dataset.site;
                const name = this.dataset.name;

                // ‡∏ñ‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡∏∑‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                const result = await Swal.fire({
                    title: '‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î?',
                    text: `‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô "${name}" ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô "${site}" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?`,
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#dc3545',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: '‡∏Ñ‡∏∑‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
                    cancelButtonText: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å'
                });

                if (!result.isConfirmed) return;

                console.log("üîÑ ‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:", { site, name });

                // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á loading ‡∏ö‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏î (‡πÉ‡∏ä‡πâ CSS spinner)
                const originalText = this.innerHTML;
                this.innerHTML = '<span class="loading-spinner"></span>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡∏∑‡∏ô...';
                this.disabled = true;

                try {
                    const response = await fetch(`${API_URL}/return-all`, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ site, name })
                    });

                    const apiResult = await response.json();

                    if (response.ok) {
                        Swal.fire({ 
                            icon: "success", 
                            title: apiResult.message,
                            timer: 2000,
                            showConfirmButton: false
                        });

                        // ‚úÖ ‡∏•‡∏ö‡πÅ‡∏ñ‡∏ß‡∏ó‡∏±‡πâ‡∏á‡πÅ‡∏ñ‡∏ß ‡∏û‡∏£‡πâ‡∏≠‡∏° fadeOut animation
                        const rowId = `tool-row-${site.replace(/\s+/g, '-')}-${name.replace(/\s+/g, '-')}`;
                        const row = document.getElementById(rowId);
                        
                        if (row) {
                            row.classList.add('fade-out');
                            setTimeout(() => {
                                row.remove();
                                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                                checkAndUpdateSiteSection(site);
                                // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏ß‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏•‡∏ö‡πÅ‡∏ñ‡∏ß‡πÅ‡∏•‡πâ‡∏ß
                                updateSummaryStats();
                            }, 500);
                        }
                        
                    } else {
                        Swal.fire({ icon: "error", title: "‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!", text: apiResult.error });
                        // ‚úÖ ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏î‡∏¥‡∏°
                        this.innerHTML = originalText;
                        this.disabled = false;
                    }
                } catch (error) {
                    console.error("Error:", error);
                    Swal.fire({ icon: "error", title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!", text: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ" });
                    // ‚úÖ ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏î‡∏¥‡∏°
                    this.innerHTML = originalText;
                    this.disabled = false;
                }
            });
        });
    }

    // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô
    function checkAndUpdateSiteSection(siteName) {
        const allRows = document.querySelectorAll(`[id^="tool-row-${siteName.replace(/\s+/g, '-')}-"]`);
        if (allRows.length === 0) {
            // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß ‡∏•‡∏ö section ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            const siteSections = document.querySelectorAll('.site-section');
            let targetSection = null;
            
            siteSections.forEach(section => {
                const header = section.querySelector('h3');
                if (header && header.textContent.includes(siteName)) {
                    targetSection = section;
                }
            });
            
            if (targetSection) {
                targetSection.classList.add('fade-out');
                setTimeout(() => {
                    targetSection.remove();
                    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                    checkForEmptyState();
                }, 500);
            }
        } else {
            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
            const siteSections = document.querySelectorAll('.site-section');
            siteSections.forEach(section => {
                const header = section.querySelector('h3');
                if (header && header.textContent.includes(siteName)) {
                    const badge = header.querySelector('span');
                    if (badge) {
                        badge.textContent = `${allRows.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`;
                        badge.classList.add('pulse');
                        setTimeout(() => badge.classList.remove('pulse'), 500);
                    }
                }
            });
        }
    }

    // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ß‡πà‡∏≤‡∏á
    function checkForEmptyState() {
        const allSections = document.querySelectorAll('.site-section');
        if (allSections.length === 0) {
            // ‚úÖ ‡πÉ‡∏ä‡πâ borrowedList ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
            if (borrowedList) {
                borrowedList.innerHTML = `
                    <div class="slide-up" style="text-align: center; padding: 40px; color: #718096;">
                        <div style="font-size: 3rem; margin-bottom: 15px;">üì≠</div>
                        <div style="font-size: 1.25rem; font-weight: 600; margin-bottom: 8px; color: #4a5568;">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏°</div>
                        <div style="font-size: 1rem; line-height: 1.5;">‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏¢‡∏∑‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÇ‡∏î‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô</div>
                    </div>
                `;
            }
        }
    }

    // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏ß‡∏°
    function updateSummaryStats() {
        const allRows = document.querySelectorAll('[id^="tool-row-"]');
        const allSections = document.querySelectorAll('.site-section');
        
        let totalQuantity = 0;
        allRows.forEach(row => {
            const quantityText = row.querySelector('.quantity-display')?.textContent || "0";
            const quantity = parseInt(quantityText.match(/\d+/)?.[0] || "0");
            totalQuantity += quantity;
        });

        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ ‡∏û‡∏£‡πâ‡∏≠‡∏° animation
        const summaryDivs = document.querySelectorAll('div[style*="‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏ß‡∏°"]');
        summaryDivs.forEach(summaryDiv => {
            summaryDiv.innerHTML = `
                <h4 style="margin: 0 0 15px 0; font-size: 1.2rem; color: #FFD700;">üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏ß‡∏°</h4>
                <div style="display: flex; justify-content: space-around; flex-wrap: wrap; gap: 15px;">
                    <div class="pulse" style="
                        padding: 10px;
                        background: rgba(255, 215, 0, 0.1);
                        border-radius: 8px;
                        border: 1px solid rgba(255, 215, 0, 0.2);
                    ">
                        <div style="font-size: 2rem; font-weight: bold; color: #FFD700;">${allSections.length}</div>
                        <div style="font-size: 0.9rem; opacity: 0.8; color: #E2E8F0;">‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô</div>
                    </div>
                    <div class="pulse" style="
                        padding: 10px;
                        background: rgba(255, 215, 0, 0.1);
                        border-radius: 8px;
                        border: 1px solid rgba(255, 215, 0, 0.2);
                    ">
                        <div style="font-size: 2rem; font-weight: bold; color: #FFD700;">${allRows.length}</div>
                        <div style="font-size: 0.9rem; opacity: 0.8; color: #E2E8F0;">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</div>
                    </div>
                    <div class="pulse" style="
                        padding: 10px;
                        background: rgba(255, 215, 0, 0.1);
                        border-radius: 8px;
                        border: 1px solid rgba(255, 215, 0, 0.2);
                    ">
                        <div style="font-size: 2rem; font-weight: bold; color: #FFD700;">${totalQuantity}</div>
                        <div style="font-size: 0.9rem; opacity: 0.8; color: #E2E8F0;">‡∏ä‡∏¥‡πâ‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
                    </div>
                </div>
            `;
            
            // ‡∏•‡∏ö animation ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 500ms
            setTimeout(() => {
                summaryDiv.querySelectorAll('.pulse').forEach(el => el.classList.remove('pulse'));
            }, 500);
        });
    }

    // ‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    console.log("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö...");
    loadTools();
    fetchBorrowedTools();
});

// ‚úÖ Service Worker Registration
if ("serviceWorker" in navigator) {
    navigator.serviceWorker.register("/sw.js")
        .then(() => console.log("‚úÖ Service Worker ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!"))
        .catch(err => console.log("‚ùå Service Worker ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err));
} else {
    console.log("üöß Service Worker ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô development");
}