document.addEventListener("DOMContentLoaded", function () {
    const API_URL = "https://3d00-1-10-233-58.ngrok-free.app";
    const toolsList = document.getElementById("tools-list");
    const borrowedList = document.getElementById("borrowed-list");
    const siteInput = document.getElementById("site-name");
    const noteInput = document.getElementById("note");
    const searchTool = document.getElementById("search-tool"); // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    const borrowForm = document.getElementById("borrow-form");

    // ‚úÖ ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå 64 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏£‡∏ö
    const toolNames = [
        "‡∏™‡∏ß‡πà‡∏≤‡∏ô (‡πÑ‡∏£‡πâ‡∏™‡∏≤‡∏¢,‡πÅ‡∏ö‡∏ï)", "‡∏™‡∏ß‡πà‡∏≤‡∏ô (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)", "‡∏™‡∏ß‡πà‡∏≤‡∏ô‡πÇ‡∏£‡∏ï‡∏≤‡∏£‡∏µ,‡∏™‡∏ß‡πà‡∏≤‡∏ô‡πÅ‡∏ä‡πá‡∏Å (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)", "‡∏™‡∏ß‡πà‡∏≤‡∏ô‡πÇ‡∏£‡∏ï‡∏≤‡∏£‡∏µ‡πà,‡∏™‡∏ß‡πà‡∏≤‡∏ô‡πÅ‡∏¢‡πá‡∏Å(‡πÑ‡∏£‡πâ‡∏™‡∏≤‡∏¢,‡πÅ‡∏ö‡∏ï)",
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏Å‡∏±‡∏î,‡πÄ‡∏à‡∏≤‡∏∞ ‡∏Ñ‡∏≠‡∏ô‡∏Å‡∏£‡∏µ‡∏ï (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)", "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏à‡∏≤‡∏∞‡∏Ñ‡∏¥‡∏ô, ‡∏Ç‡∏∏‡∏î‡∏´‡∏•‡∏∏‡∏° (‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô)", "‡∏´‡∏¥‡∏ô‡πÄ‡∏à‡∏µ‡∏¢‡∏£‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)", "‡∏´‡∏¥‡∏ô‡πÄ‡∏à‡∏µ‡∏¢‡∏£‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å (‡πÑ‡∏£‡πâ‡∏™‡∏≤‡∏¢,‡πÅ‡∏ö‡∏ï)",
        "‡∏´‡∏¥‡∏ô‡πÄ‡∏à‡∏µ‡∏¢‡∏£‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏•‡∏≤‡∏á (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)", "‡∏´‡∏¥‡∏ô‡πÄ‡∏à‡∏µ‡∏¢‡∏£‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏•‡∏≤‡∏á (‡πÑ‡∏£‡πâ‡∏™‡∏≤‡∏¢,‡πÅ‡∏ö‡∏ï)", "‡∏´‡∏¥‡∏ô‡πÄ‡∏à‡∏µ‡∏¢‡∏£‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)", "‡πÑ‡∏ü‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡πÑ‡∏ü‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)", "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏π‡∏î‡∏ù‡∏∏‡πà‡∏ô (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)", "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏õ‡πà‡∏≤‡∏•‡∏°‡∏£‡πâ‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡∏ó‡πà‡∏≠ Pvc (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)", "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏õ‡πà‡∏≤‡∏•‡∏° (‡πÑ‡∏£‡πâ‡∏™‡∏≤‡∏¢,‡πÅ‡∏ö‡∏ï)",
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ç‡∏±‡∏î‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡∏ó‡∏£‡∏≤‡∏¢‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)", "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ç‡∏±‡∏î‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡∏ó‡∏£‡∏≤‡∏¢‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)", "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏≤‡∏¢‡∏à‡∏µ‡πâ‡∏õ‡∏π‡∏ô (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)", "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ï‡∏±‡∏î‡πÑ‡∏°‡πâ (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ï‡∏±‡∏î‡∏´‡∏ç‡πâ‡∏≤ (‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô)", "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏¢‡∏¥‡∏á‡πÄ‡∏•‡πÄ‡∏ã‡∏≠‡∏£‡πå (‡πÑ‡∏£‡πâ‡∏™‡∏≤‡∏¢,‡πÅ‡∏ö‡∏ï)", "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÇ‡∏°‡πà‡∏õ‡∏π‡∏ô‡∏â‡∏≤‡∏ö (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)", "‡∏ß‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)", "‡∏ß‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (‡πÑ‡∏£‡πâ‡∏™‡∏≤‡∏¢,‡πÅ‡∏ö‡∏ï)",
        "‡∏ó‡∏£‡∏¥‡∏°‡πÄ‡∏°‡∏≠‡∏£‡πå (‡πÑ‡∏£‡πâ‡∏™‡∏≤‡∏¢,‡πÅ‡∏ö‡∏ï)", "‡∏à‡∏¥‡πä‡∏Å‡∏ã‡∏≠‡∏ï‡∏±‡∏î‡πÑ‡∏°‡πâ (‡πÑ‡∏£‡πâ‡∏™‡∏≤‡∏¢,‡πÅ‡∏ö‡∏ï)", "‡∏à‡∏¥‡πä‡∏Å‡∏ã‡∏≠‡∏ï‡∏±‡∏î‡πÑ‡∏°‡πâ (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)", "‡∏ï‡∏π‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)", "‡∏ï‡∏π‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° Mig (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)",
        "‡∏™‡∏≤‡∏¢‡πÑ‡∏ü (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)", "‡∏™‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° (‡πÑ‡∏ü‡∏ü‡πâ‡∏≤)", "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥", "‡∏™‡∏≤‡∏¢‡∏ß‡∏±‡∏î‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥", "‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£‡∏ï‡∏±‡∏î‡∏ã‡∏µ‡∏•‡∏≤‡∏¢ (C-Line)", "‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£‡∏ï‡∏±‡∏î‡∏ó‡πà‡∏≠ Pvc",
        "‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£‡∏ï‡∏±‡∏î‡πÅ‡∏ú‡πà‡∏ô‡πÄ‡∏°‡∏ó‡∏±‡∏•‡∏ä‡∏µ‡∏ó", "‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£‡∏ï‡∏±‡∏î‡πÄ‡∏´‡∏•‡πá‡∏Å", "‡∏´‡∏±‡∏ß‡∏õ‡∏±‡πà‡∏ô‡∏õ‡∏π‡∏ô", "‡∏õ‡∏±‡πä‡∏°‡∏•‡∏°", "‡∏ï‡∏±‡∏ß‡∏ï‡∏±‡∏î‡∏Å‡∏£‡∏∞‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á", "‡∏ï‡∏±‡∏ß‡∏à‡∏±‡∏ö‡∏Å‡∏£‡∏∞‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á",
        "‡∏Å‡∏¥‡πä‡∏ü‡∏´‡∏ô‡∏µ‡∏ö‡∏Å‡∏£‡∏∞‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á (‡∏ñ‡∏∏‡∏á‡∏•‡∏∞ 100 ‡∏ï‡∏±‡∏ß)", "‡∏™‡∏≤‡∏°‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°", "‡∏õ‡∏∑‡∏ô‡∏¢‡∏¥‡πà‡∏á‡∏Å‡∏≤‡∏ß", "‡∏õ‡∏∑‡∏ô‡∏¢‡∏¥‡∏á‡∏Å‡∏≤‡∏ß‡πÑ‡∏™‡πâ‡∏Å‡∏£‡∏≠‡∏Å", "‡πÅ‡∏°‡πá‡∏Å‡∏•‡∏°",
        "‡πÅ‡∏î‡πä‡∏õ‡∏Ç‡∏≤‡∏ß,‡∏Å‡∏≤‡∏ß‡∏ï‡∏∞‡∏õ‡∏π‡πÅ‡∏î‡πä‡∏õ‡∏™‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡πÜ", "‡∏™‡∏ß‡πà‡∏≤‡∏ô‡πÇ‡∏£‡∏ï‡∏≤‡∏£‡∏µ‡πà‡πÅ‡∏ö‡∏ï‡πÄ‡∏•‡πá‡∏Å", "‡∏Ñ‡πâ‡∏≠‡∏ô‡πÄ‡∏•‡πá‡∏Å", "‡∏ä‡∏∞‡πÅ‡∏•‡∏á", "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏ß‡∏±‡∏î‡∏£‡∏∞‡∏î‡∏±‡∏ö",
        "‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï‡πÑ‡∏•‡∏ó‡πå", "‡∏ñ‡∏±‡∏á‡∏•‡∏°", "‡πÄ‡∏Å‡∏£‡∏µ‡∏¢‡∏á‡∏Ç‡∏±‡∏î‡∏°‡∏±‡∏ô‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å", "‡πÄ‡∏Å‡∏£‡∏µ‡∏¢‡∏á‡∏Ç‡∏±‡∏î‡∏°‡∏±‡∏ô‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà", "‡∏£‡∏ñ‡∏ñ‡∏±‡∏á‡∏Ç‡∏±‡∏î‡∏™‡∏Å‡∏¥‡∏°",
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏û‡πà‡∏ô‡∏™‡∏µ", "‡∏ö‡∏±‡∏ô‡πÑ‡∏î", "‡∏à‡∏≠‡∏ö", "‡πÄ‡∏™‡∏µ‡∏¢‡∏°", "‡∏ö‡∏∏‡πâ‡∏á‡∏Å‡∏µ‡πã", "‡∏Å‡∏∞‡∏ö‡∏∞‡∏õ‡∏π‡∏ô", "‡∏ñ‡∏±‡∏á‡πÉ‡∏™‡πà‡∏õ‡∏π‡∏ô"
    ];

    function loadTools() {
        toolsList.innerHTML = toolNames.map(name => `
            <div class="tool-card">
                <input type="checkbox" name="tools" value="${name}">
                <label>${name}</label>
                <input type="number" class="tool-quantity" min="1" max="99" value="1">
            </div>
        `).join("");
    }

    // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
    if (searchTool) {
        searchTool.addEventListener("input", function () {
            const searchTerm = this.value.toLowerCase();
            const tools = document.querySelectorAll("#tools-list .tool-card");

            tools.forEach(tool => {
                const toolName = tool.textContent.toLowerCase();
                if (toolName.includes(searchTerm)) {
                    tool.style.display = "block"; // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ñ‡πâ‡∏≤‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
                } else {
                    tool.style.display = "none"; // ‡∏ã‡πà‡∏≠‡∏ô‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á
                }
            });
        });
    }

    function attachReturnEventListeners() {
        document.querySelectorAll(".return-item-btn").forEach(button => {
            button.addEventListener("click", async function () {
                const site = this.dataset.site;
                const name = this.dataset.name;
    
                try {
                    const response = await fetch(API_URL + "/return-item", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ site, name })
                    });
    
                    if (response.ok) {
                        Swal.fire({ icon: "success", title: `‡∏Ñ‡∏∑‡∏ô ${name} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!` });
                        fetchBorrowedTools();  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
                    } else {
                        const errorData = await response.json();
                        Swal.fire({ icon: "error", title: "‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!", text: errorData.error });
                    }
                } catch (error) {
                    Swal.fire({ icon: "error", title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!", text: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ" });
                }
            });
        });
    }
    

    async function fetchBorrowedTools() {
        try {
            const response = await fetch(API_URL + "/borrowed-tools");
            const data = await response.json();
    
            borrowedList.innerHTML = "";
    
            if (data.length === 0) {
                borrowedList.innerHTML = "<p>üì≠ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏¢‡∏∑‡∏°</p>";
                return;
            }
    
            // ‚úÖ ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô
            const groupedBySite = {};
            data.forEach(tool => {
                if (!groupedBySite[tool.site]) {
                    groupedBySite[tool.site] = [];
                }
                groupedBySite[tool.site].push(tool);
            });
    
            // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÅ‡∏ö‡∏ö‡πÅ‡∏¢‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô
            Object.keys(groupedBySite).forEach(site => {
                const siteContainer = document.createElement("div");
                siteContainer.classList.add("site-section");
                siteContainer.innerHTML = `<h2>üèóÔ∏è ‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô: ${site}</h2>`;
    
                const toolTable = document.createElement("table");
                toolTable.innerHTML = `
                    <thead>
                        <tr>
                            <th>üõ†Ô∏è ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</th>
                            <th>üî¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
                            <th>üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</th>
                            <th>üîÑ ‡∏Ñ‡∏∑‡∏ô</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${groupedBySite[site].map(tool => `
                            <tr>
                                <td>${tool.name}</td>
                                <td>${tool.quantity} ‡∏ä‡∏¥‡πâ‡∏ô</td>
                                <td>${tool.note || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏"}</td>
                                <td><button class="return-item-btn" data-site="${site}" data-name="${tool.name}">üîÑ ‡∏Ñ‡∏∑‡∏ô</button></td>
                            </tr>
                        `).join("")}
                    </tbody>
                `;
    
                siteContainer.appendChild(toolTable);
                borrowedList.appendChild(siteContainer);
            });
    
            attachReturnEventListeners();  // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
        } catch (error) {
            Swal.fire({ icon: "error", title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!", text: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API ‡πÑ‡∏î‡πâ" });
        }
    }
    

    // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏°
    borrowForm.addEventListener("submit", async function (event) {
        event.preventDefault();

        const siteName = siteInput.value.trim();
        const note = noteInput.value.trim();
        const selectedTools = Array.from(document.querySelectorAll("input[name='tools']:checked"))
            .map(checkbox => ({
                name: checkbox.value,
                quantity: parseInt(checkbox.parentElement.querySelector(".tool-quantity").value, 10)
            }));

        if (!siteName) {
            Swal.fire({ icon: "warning", title: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô!" });
            return;
        }
        if (selectedTools.length === 0) {
            Swal.fire({ icon: "warning", title: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå!" });
            return;
        }

        try {
            const response = await fetch(API_URL + "/borrow", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ site: siteName, tools: selectedTools, note })
            });

            if (response.ok) {
                Swal.fire({ icon: "success", title: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!" });
                siteInput.value = "";
                noteInput.value = "";
                document.querySelectorAll("input[name='tools']").forEach(checkbox => checkbox.checked = false);
                fetchBorrowedTools();
            }
        } catch (error) {
            Swal.fire({ icon: "error", title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!", text: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ" });
        }
    });

    loadTools();
    fetchBorrowedTools();
});

if ("serviceWorker" in navigator) {
    navigator.serviceWorker.register("/sw.js")
        .then(() => console.log("‚úÖ Service Worker ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!"))
        .catch(err => console.log("‚ùå Service Worker ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err));
}
